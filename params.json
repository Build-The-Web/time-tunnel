{"name":"Time Tunnel","tagline":"An event collection and dispatching µservice.","body":"![logo](https://raw.githubusercontent.com/Build-The-Web/time-tunnel/master/static/img/logo-160.png)\r\n\r\n![Apache 2.0 licensed](http://img.shields.io/badge/license-Apache_2.0-red.svg)\r\n[![Travis CI](https://api.travis-ci.org/Build-The-Web/time-tunnel.svg)](https://travis-ci.org/Build-The-Web/time-tunnel)\r\n\r\n\r\n## Overview\r\n\r\n`time-tunnel` accepts timestamped events with loosely defined semantics over a set of common APIs,\r\nand then dispatches those events on a best-effort basis\r\nto various event sinks according to a ruleset that is part of the configuration.\r\n\r\nThe main goal is to offer clients a way to easily push their events to *one* uniform event submission API of their choosing,\r\nand then go back and concentrate on their actual task. Once those events hit the dispatcher,\r\nthey can be filtered and duplicated according to the needs of the event sinks.\r\n\r\nThere's a set of built-in implementations for both delivery APIs and event sinks, and they can\r\nbe extended with custom ones via a plugin system.\r\n`time-tunnel` is implemented using Python (tested on 2.7 and 3.4) and Flask+WSME.\r\n\r\n![System Landscape](https://raw.githubusercontent.com/Build-The-Web/time-tunnel/master/static/img/system-landscape.png)\r\n\r\n\r\n## Events\r\n\r\nThe canonical representation of an event is a flat JSON object with the following fields.\r\n\r\n* `timestamp` – The timestamp of this event in ISO-8601 format.\r\n* `kind` – An URN specifying the type of this event.\r\n* `message` – Human readable description.\r\n* `source` – An URN or URL specifying the exact location of the event source (e.g. a deployed webapp).\r\n* `severity` – Importance of alarms or log entries.\r\n* `view_link` – URL of a view in the source system.\r\n* `ack_link` – URL for acknowledging alarm events.\r\n\r\n`timestamp`, `kind` and `message` are obligatory,\r\nbut `timestamp` is added server-side when it's missing,\r\nand `kind` defaults to `unknown`.\r\nAll other fields are optional, but if the semantics fit, the field name as defined above should be used.\r\nAny additional number of fields can be included.\r\n\r\n\r\n## Installation\r\n\r\nTo create a development environment, use these commands:\r\n\r\n```sh\r\ngit clone \"https://github.com/Build-The-Web/time-tunnel.git\"\r\ncd time-tunnel\r\n. .env # answer the prompt with (y)es\r\ninvoke build --docs\r\n```\r\n\r\nSee [CONTRIBUTING](https://github.com/Build-The-Web/time-tunnel/blob/master/CONTRIBUTING.md)\r\nfor details on how to give back your improvements and fixes to upstream, so every user can benefit from them.\r\n\r\n\r\n## Related Projects\r\n\r\n**Event sources + sinks**\r\n\r\n* [HipChat](https://github.com/hipchat)\r\n* [InfluxDB](https://github.com/influxdb)\r\n* [Sentry](https://github.com/getsentry/sentry)\r\n* [StatsD](https://github.com/etsy/statsd)\r\n* [Fluentd](https://github.com/fluent/fluentd)\r\n* [feedr](https://github.com/nir0s/feedr)\r\n* [python-beaver](https://github.com/josegonzalez/python-beaver)\r\n\r\n**Visualization / UI**\r\n\r\n* [EventDrops](https://github.com/marmelab/EventDrops)\r\n* [Timesketch](https://github.com/google/timesketch)\r\n* [Anthracite](https://github.com/Dieterbe/anthracite)\r\n\r\n\r\n## Acknowledgements\r\n\r\n[![1&1](https://raw.githubusercontent.com/1and1/1and1.github.io/master/images/1and1-logo-42.png)](https://github.com/1and1)  Project sponsored by [1&1](https://github.com/1and1).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}